<!DOCTYPE html>
<html>

<head>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.min.css" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="/css/dashboard.css" rel="stylesheet" type="text/css">
</head>

<body>
  <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
  <script type="text/javascript"
    src="http://maps.google.com/maps/api/js?key=AIzaSyBz1wVCigPqKRUOumbHEMwz_KzQW-5mbzY"></script>
  <script type="text/javascript">
    var map;
    var markers = new Set();
    var markerNames = new Map();

    function getLocation() {
      loadMap(null);
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);
      }

    }

    function showPosition(position) {
      loadMap(position);
    }

    /* First, we define a function that creates a new Google Map and installs
       it in the 'map' DIV (see the HTML part at the bottom). */

    var loadMap = function (position) {
      if (position) {
        var myOptions = {
          center: new google.maps.LatLng(position.coords.latitude, position.coords.longitude),
          zoom: 14,
          mapTypeId: google.maps.MapTypeId.ROADMAP,
          backgroundColor: '#F5F5F5'
        };
      } else {
        var myOptions = {
          center: new google.maps.LatLng(39.952335, -75.163789),
          zoom: 11,
          mapTypeId: google.maps.MapTypeId.ROADMAP,
          backgroundColor: '#F5F5F5'
        };
      }
      map = new google.maps.Map(document.getElementById("map"), myOptions);
      // google.maps.event.addListener(map, 'click', function (event) {
      //   document.getElementsByName('latitude')[0].value = event.latLng.lat()
      //   document.getElementsByName('longitude')[0].value = event.latLng.lng();
      // });
      //loadGeoData();
    };

    /* We then assign this function to the 'onload' property of the main window,
       so that it will be called as soon as the browser has finished loading the page. */

    window.onload = getLocation;

    document.addEventListener('DOMContentLoaded', function () {
      document.forms["addAudio"].addEventListener('submit', submitAudio);
    });

    var submitAudio = function (e) {
      e.preventDefault();
      console.log(e);
      const minLat = Number(e.target.elements[1].value);
      const maxLat = Number(e.target.elements[3].value);
      const minLng = Number(e.target.elements[2].value);
      const maxLng = Number(e.target.elements[4].value);
      console.log(Date.now());
      if (minLat > maxLat || minLng > maxLng) {
        alert('Please enter valid min and max lat/lng coordinates!');
      } else {
        $.ajax({
          url: "/audio",
          type: "POST",
          data: new FormData(document.forms["addAudio"]),
          processData: false,
          contentType: false,
          success: function (data) {
            $("#ad").val('');
            console.log(Date.now());
          }
        });
      }
      
    };

    // window.setInterval(function () { loadGeoData(); }, 5000);

    // /* Finally, we need a function that downloads the geo data from the server (which is
    //    running visualizer.js and makes the data available under '/getGeoData') and
    //    puts a marker on the map for each line of the geo data */

    // var loadGeoData = function () {
    //   // Send a request for the geo data to the server, and provide a (nameless) callback
    //   // function that will be called when the geo data has been downloaded

    //   $.get('/getrestaurantsdata', function (data) {

    //     // When we reach this point, the geo data has been downloaded and is now available
    //     // as 'data' (the argument of the callback)

    //     // ... and then iterate over the lines
    //     var copyMarkers = new Set(markers);
    //     var arr = data.arr;
    //     var user = data.user;
    //     arr.forEach(function (restaurant) {
    //       var latitude = restaurant.latitude;
    //       var longitude = restaurant.longitude;
    //       var name = restaurant.name;
    //       var description = restaurant.description;
    //       var creator = restaurant.creator;

    //       if (!markers.has(name)) {
    //         addMarker(latitude, longitude, name, description, creator, user);
    //       } else {
    //         copyMarkers.delete(name);
    //       }
    //     });
    //     copyMarkers.forEach(function (name) {
    //       markers.delete(name);
    //       markerNames.get(name).setMap(null);
    //       markerNames.delete(name);
    //     });
    //   });
    // };

    // var addMarker = function (latitude, longitude, name, description, creator, user) {
    //   // Now we create a marker at the location that was specified
    //   var myLatLng = new google.maps.LatLng(parseFloat(latitude), parseFloat(longitude));
    //   var marker = new google.maps.Marker({
    //     position: myLatLng,
    //     title: name,
    //     icon: {
    //       url: creator === user ? "http://maps.google.com/mapfiles/ms/icons/yellow-dot.png" : "http://maps.google.com/mapfiles/ms/icons/red-dot.png"
    //     }
    //   });
    //   marker.setMap(map);

    //   var contentString = "<b>" + name + "</b></br><p>" + description + "</br><i>Added by " + creator + "&nbsp</i></p>"; //"<a href=" + photo + "><img src=" + photo + " height='150 px' width='150 px'/></a></br>"

    //   // Now we create the info window (which is initially hidden)...

    //   marker['infowindow'] = new google.maps.InfoWindow({
    //     content: contentString
    //   });

    //   // ... and we add a 'listener' function to the marker that will
    //   // be called when someone clicks on it. The listener will then
    //   // open the info window we just created.

    //   google.maps.event.addListener(marker, 'click', function () {
    //     this['infowindow'].open(map, this);
    //   });

    //   google.maps.event.addListener(marker, 'rightclick', function () {
    //     if (user === creator) {
    //       $.post('/deleterestaurant', { name: name }, function (data) {
    //         var err = data.err;
    //         if (!err) {
    //           marker.setMap(null);
    //         } else {
    //           alert(err.toString());
    //         }
    //       });
    //     } else {
    //       alert('You do not have permission to delete this restaurant as you are not the user that created this marker.');
    //     }
    //   });
    //   markers.add(name);
    //   markerNames.set(name, marker);
    // };
  </script>
  <div class="bigHeader">
      <img class="adio-black" href="/account" src="/images/adio-black.png"/>
      <div class="header">
        <a class="account" href="/account">My Account</a>
        <a class="submit-ads" href="/">Submit my Ads</a>
        <a class="logout" href="/logout">Logout</a>
      </div>
  </div>
  
  <div class="container">
    <div id="map"></div>
    
    <div id="formContent">
        <form enctype="multipart/form-data" name="addAudio" id="signup" >
          <h2 class="form">Submit your ads here!</h2>
          <h3>You can submit multiple audio files for your company's advertisement campaign (limit to 5 files).
          <br/><br/>Limit your description to 100 characters.</h3>
          <div id="error-ncn">
            <input type="text" id="campaign-name" class="fadeIn first" name="campaignName" placeholder="Campaign Name"
              required onfocus="this.placeholder = ''" onblur="this.placeholder = 'Campaign Name'">
          </div>
          <div id="name-wrapper">
            <div id="error-fn">
              <input type="text" id="min-latitude" class="fadeIn second" name="minLat" placeholder="Min. Latitude"
              required min="-90" max="90" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Min. Latitude'">
            </div>
            <div id="error-ln">
              <input type="text" id="min-longitude" class="fadeIn second" name="minLng" placeholder="Min. Longitude"
              required min="-180" max="180" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Min. Longitude'">
            </div>
          </div>
          <div id="name-wrapper">
            <div id="error-fn">
              <input type="text" id="max-latitude" class="fadeIn second" name="maxLat" placeholder="Max. Latitude"
              required min="-90" max="90" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Max. Latitude'">
            </div>
            <div id="error-ln">
              <input type="text" id="max-longitude" class="fadeIn second" name="maxLng" placeholder="Max. Longitude"
              required onfocus="this.placeholder = ''" onblur="this.placeholder = 'Max. Longitude'">
            </div>
          </div>
          <div id="error-ncn">
            <input type="text" id="description" class="fadeIn third" name="description" placeholder="Description of Ad"
            required maxlength="100" min="-180" max="180" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Description of Ad'">
          </div>
          <input type="file" name="ad" multiple id="ad" required />
          <input type="submit" />
        </form>
    </div>
  
    
    
    <!-- </div> -->
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
  </div>
</body>

</html>